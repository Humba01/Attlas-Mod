plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
	id 'org.jetbrains.kotlin.plugin.serialization' version '1.3.50'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

// Select the repositories you want to publish to
// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
repositories {
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	mavenLocal()
	maven {
		name = "AperLambda"
		url = 'https://aperlambda.github.io/maven'
	}
	maven { 
		url = "https://jitpack.io" 
	}
	maven {
		url 'https://server.bbkr.space/artifactory/libs-release/'
	}
	maven {
		name = "Ladysnake Libs"
		url = "https://dl.bintray.com/ladysnake/libs"
	}
	jcenter()
	maven {
		url "https://hephaestus.dev/release"
	}
	maven {
		name = "BuildCraft"
		url = "https://mod-buildcraft.com/maven"
	}
	maven {
		name = "OnyxStudios"
		url = "https://maven.onyxstudios.dev"
	}
	maven {
		url = 'https://dl.bintray.com/boogiemonster1o1/cool-mods/'
	}
	maven {
		name = "AdrianTodt's Maven"
		url = "https://dl.bintray.com/adriantodt/maven"
	}
	maven { url 'https://repo.repsy.io/mvn/gandiber/geckolib' }
	maven {
		name = "dblsaiko"
		url = "https://maven.dblsaiko.net/"
	}
	allprojects {
		repositories {
			maven { url 'https://jitpack.io' }
		}
	}
	maven {
		url = "https://maven.theillusivec4.top"
	}
	maven {
		url = "https://maven.modmuss50.me/"
	}
	maven {
		url = 'https://dl.bintray.com/boogiemonster1o1/cool-mods/'
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.

	/* Fabric Lib definitions */
	modImplementation include("io.github.cottonmc:LibGui:${project.libgui_version}")
	
	modImplementation "com.github.lambdaurora:spruceui:${project.spruceui_version}"
	include "com.github.lambdaurora:spruceui:${project.spruceui_version}"

	modImplementation "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
	include "io.github.ladysnake:PlayerAbilityLib:${pal_version}"

	modApi 'teamreborn:energy:0.1.1'
	include 'teamreborn:energy:0.1.1'

	modImplementation("com.lettuce.fudge:fabric-drawer:3.1.0")

	modRuntime "io.github.GlassPane:Mesh:${project.mesh_version}"
	modApi "io.github.GlassPane:Mesh-API:${project.mesh_version}"
	annotationProcessor "io.github.GlassPane:Mesh-Annotations:${project.mesh_version}"

	modImplementation "dev.hephaestus:FibLib:${project.fiblib_version}"
	include "dev.hephaestus:FibLib:${project.fiblib_version}"

	modCompile "alexiil.mc.lib:libmultipart-all:0.3.4"

	modCompile "alexiil.mc.lib:libblockattributes-all:0.8.4"
	modCompile "alexiil.mc.lib:libblockattributes-items:0.8.4"
	modCompile "alexiil.mc.lib:libblockattributes-fluids:0.8.4"

	modImplementation "net.adriantodt.fabricmc:fallflyinglib:${project.ffl_version}"
	include "net.adriantodt.fabricmc:fallflyinglib:${project.ffl_version}"

	modImplementation 'software.bernie.geckolib:fabric-1.16.5-geckolib:3.0.13:dev'

	modImplementation "com.github.CrimsonDawn45:Fabric-Shield-Lib:${project.fabric_shield_lib_version}"

	modImplementation "io.github.Linguardium:WanderingTradesmen:${project.tradesmen_version}"
	include "io.github.Linguardium:WanderingTradesmen:${project.tradesmen_version}"

	implementation "me.zeroeightsix:fiber:${project.fiber_version}"

	modImplementation("io.github.boogiemonster1o1:libcbe:${project.libcbe_version}")
	include("io.github.boogiemonster1o1:libcbe:${project.libcbe_version}")

	modImplementation "io.github.boogiemonster1o1:LibSchem:${project.libschem_version}"
	// Optional: includes LibSchem as a Jar-in-Jar dependency
	include "io.github.boogiemonster1o1:LibSchem:${project.libschem_version}"

	modImplementation "io.github.cottonmc:cotton-client-commands:1.0.1+1.16-rc1"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
}
